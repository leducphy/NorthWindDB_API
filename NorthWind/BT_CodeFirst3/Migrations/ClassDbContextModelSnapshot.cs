// <auto-generated />
using System;
using BT_CodeFirst3.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BT_CodeFirst3.Migrations
{
    [DbContext(typeof(ClassDbContext))]
    partial class ClassDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BT_CodeFirst3.Models.KetQua", b =>
                {
                    b.Property<string>("MaSV")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("MaMH")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<byte>("LanThi")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Diem")
                        .HasColumnType("numeric(4,2)");

                    b.Property<string>("KQ")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.HasKey("MaSV", "MaMH", "LanThi");

                    b.HasIndex("MaMH");

                    b.ToTable("KetQuas");
                });

            modelBuilder.Entity("BT_CodeFirst3.Models.Khoa", b =>
                {
                    b.Property<string>("MaKH")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<int>("SLSV")
                        .HasColumnType("int");

                    b.Property<string>("TenKH")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MaKH");

                    b.ToTable("Khoas");
                });

            modelBuilder.Entity("BT_CodeFirst3.Models.MonHoc", b =>
                {
                    b.Property<string>("MaMH")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<byte>("SoTiet")
                        .HasColumnType("tinyint");

                    b.Property<string>("TenMH")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)");

                    b.HasKey("MaMH");

                    b.ToTable("MonHocs");
                });

            modelBuilder.Entity("BT_CodeFirst3.Models.SinhVien", b =>
                {
                    b.Property<string>("MaSV")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<decimal>("DiemTB")
                        .HasColumnType("numeric(4,2)");

                    b.Property<string>("HoSV")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("HocBong")
                        .HasColumnType("money");

                    b.Property<string>("MaKH")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<DateTime>("NGSinh")
                        .HasColumnType("datetime");

                    b.Property<string>("NoiSinh")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Phai")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("TenSV")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("MaSV");

                    b.HasIndex("MaKH");

                    b.ToTable("SinhViens");
                });

            modelBuilder.Entity("BT_CodeFirst3.Models.KetQua", b =>
                {
                    b.HasOne("BT_CodeFirst3.Models.MonHoc", "MonHoc")
                        .WithMany("KetQuas")
                        .HasForeignKey("MaMH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_KetQua_MonHoc");

                    b.HasOne("BT_CodeFirst3.Models.SinhVien", "SinhVien")
                        .WithMany("KetQuas")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_KetQua_SinhVien");

                    b.Navigation("MonHoc");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("BT_CodeFirst3.Models.SinhVien", b =>
                {
                    b.HasOne("BT_CodeFirst3.Models.Khoa", "Khoa")
                        .WithMany("SinhViens")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SinhVien_Khoa");

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("BT_CodeFirst3.Models.Khoa", b =>
                {
                    b.Navigation("SinhViens");
                });

            modelBuilder.Entity("BT_CodeFirst3.Models.MonHoc", b =>
                {
                    b.Navigation("KetQuas");
                });

            modelBuilder.Entity("BT_CodeFirst3.Models.SinhVien", b =>
                {
                    b.Navigation("KetQuas");
                });
#pragma warning restore 612, 618
        }
    }
}
